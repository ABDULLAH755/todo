{"version":3,"sources":["firebase_config.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","TodoListItem","todo","inprogress","id","style","display","ListItem","ListItemText","primary","secondary","Button","onClick","collection","doc","update","delete","App","useState","todos","setTodos","todoInput","setTodoInput","useEffect","onSnapshot","querySnapshot","docs","map","data","className","flexDirection","justifyContent","alignItems","width","TextField","label","value","maxWidth","onChange","e","target","type","variant","preventDefault","add","timestamp","FieldValue","serverTimestamp","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAWAA,IAASC,cATY,CACjBC,OAAQ,0CACRC,WAAY,8BACZC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAKX,IAAMC,EAAKR,IAASS,Y,0BCTL,SAASC,EAAT,GAAiD,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,WAAYC,EAAM,EAANA,GAWvD,OACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,QAASP,EACTQ,UAAWP,EAAa,cAAgB,gBAI5C,cAACQ,EAAA,EAAD,CAAQC,QAnBZ,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIW,OAAO,CACpCZ,YAAaA,KAiBb,SACGA,EAAa,OAAS,WAEzB,cAACQ,EAAA,EAAD,CAAQC,QAhBZ,WACEb,EAAGc,WAAW,SAASC,IAAIV,GAAIY,UAe7B,kBCyDSC,MA5Ef,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEqBF,mBAAS,IAF9B,mBAENG,EAFM,KAEKC,EAFL,KAgCb,OA5BAC,qBAAU,WAKRxB,EAAGc,WAAW,SAASW,YAAW,SAAUC,GAC1CL,EACEK,EAAcC,KAAKC,KAAI,SAACb,GAAD,MAAU,CAC/BV,GAAIU,EAAIV,GACRF,KAAMY,EAAIc,OAAO1B,KACjBC,WAAYW,EAAIc,OAAOzB,qBAR5B,IA2BD,qBAAK0B,UAAU,MAAf,SACE,sBACExB,MAAO,CACLC,QAAS,OACTwB,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,MAAO,QANX,UASE,2CACA,iCACE,cAACC,EAAA,EAAD,CACE9B,GAAG,iBACH+B,MAAM,eACNC,MAAOf,EACPhB,MAAO,CAAE4B,MAAO,OAAQI,SAAU,SAClCC,SAAU,SAACC,GAAD,OAAOjB,EAAaiB,EAAEC,OAAOJ,UAEzC,cAACzB,EAAA,EAAD,CACE8B,KAAK,SACLC,QAAQ,YACR9B,QAnCV,SAAiB2B,GACfA,EAAEI,iBAEF5C,EAAGc,WAAW,SAAS+B,IAAI,CACzBzC,YAAY,EACZ0C,UAAWtD,IAASS,UAAU8C,WAAWC,kBACzC7C,KAAMmB,IAGRC,EAAa,KA2BLjB,MAAO,CAAEC,QAAS,QAJpB,wBAUF,qBAAKD,MAAO,CAAE4B,MAAO,OAAQI,SAAU,QAASW,UAAW,QAA3D,SACG7B,EAAMQ,KAAI,SAACzB,GAAD,OACT,cAACD,EAAD,CACEC,KAAMA,EAAKA,KACXC,WAAYD,EAAKC,WACjBC,GAAIF,EAAKE,gBC/DR6C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.870bda29.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBP8GbM9w2pFrr5aS-XPG8OUPr5E1HDlJI\",\r\n    authDomain: \"todo-devapp.firebaseapp.com\",\r\n    projectId: \"todo-devapp\",\r\n    storageBucket: \"todo-devapp.appspot.com\",\r\n    messagingSenderId: \"860633420905\",\r\n    appId: \"1:860633420905:web:76b7945e31fffa75ab3ef8\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\nexport { db };","import React from \"react\";\r\nimport { ListItem, ListItemText, Button } from \"@material-ui/core\";\r\nimport { db } from \"./firebase_config\";\r\n\r\nexport default function TodoListItem({ todo, inprogress, id }) {\r\n  function toggleInProgress() {\r\n    db.collection(\"todos\").doc(id).update({\r\n      inprogress: !inprogress,\r\n    });\r\n  }\r\n\r\n  function deleteTodo() {\r\n    db.collection(\"todos\").doc(id).delete();\r\n  }\r\n\r\n  return (\r\n    <div style={{ display: \"flex\" }}>\r\n      <ListItem>\r\n        <ListItemText\r\n          primary={todo}\r\n          secondary={inprogress ? \"In Progress\" : \"Completed\"}\r\n        />\r\n      </ListItem>\r\n\r\n      <Button onClick={toggleInProgress}>\r\n        {inprogress ? \"Done\" : \"UnDone\"}\r\n      </Button>\r\n      <Button onClick={deleteTodo}>X</Button>\r\n    </div>\r\n  );\r\n}","import \"./App.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { db } from \"./firebase_config\";\nimport firebase from \"firebase\";\nimport TodoListItem from \"./Todo\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [todoInput, setTodoInput] = useState(\"\");\n \n  useEffect(() => {\n    getTodos();\n  }, []); // blank to run only on first launch\n\n  function getTodos() {\n    db.collection(\"todos\").onSnapshot(function (querySnapshot) {\n      setTodos(\n        querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          todo: doc.data().todo,\n          inprogress: doc.data().inprogress,\n        }))\n      );\n    });\n  }\n\n  function addTodo(e) {\n    e.preventDefault();\n\n    db.collection(\"todos\").add({\n      inprogress: true,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      todo: todoInput,\n    });\n\n    setTodoInput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          width: \"100%\",\n        }}\n      >\n        <h1>To Do App</h1>\n        <form>\n          <TextField\n            id=\"standard-basic\"\n            label=\"Write a Todo\"\n            value={todoInput}\n            style={{ width: \"90vw\", maxWidth: \"500px\" }}\n            onChange={(e) => setTodoInput(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            onClick={addTodo}\n            style={{ display: \"none\" }}\n          >\n            Default\n          </Button>\n        </form>\n\n        <div style={{ width: \"90vw\", maxWidth: \"500px\", marginTop: \"24px\" }}>\n          {todos.map((todo) => (\n            <TodoListItem\n              todo={todo.todo}\n              inprogress={todo.inprogress}\n              id={todo.id}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}